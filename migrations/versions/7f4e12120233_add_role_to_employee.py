"""Add role to employee

Revision ID: 7f4e12120233
Revises: e2bef6893cc3
Create Date: 2025-04-06 00:28:24.921227

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7f4e12120233'
down_revision: Union[str, None] = 'e2bef6893cc3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('employee', sa.Column('role', sa.String(length=50), nullable=True))
    op.alter_column('employee', 'username',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               nullable=False)
    op.alter_column('employee', 'password',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               nullable=False)
    op.create_unique_constraint(None, 'employee', ['username'])
    op.alter_column('task', 'employee_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('task', 'employee_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(None, 'employee', type_='unique')
    op.alter_column('employee', 'password',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('employee', 'username',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               nullable=True)
    op.drop_column('employee', 'role')
    # ### end Alembic commands ###
