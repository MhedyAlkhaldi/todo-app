"""Clean migration after removing employee_name

Revision ID: b35a7a549834
Revises: ae45ecfeba38
Create Date: 2025-04-06 05:11:45.674251

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b35a7a549834'
down_revision: Union[str, None] = 'ae45ecfeba38'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('department_name_key', 'department', type_='unique')
    op.alter_column('employee', 'password',
               existing_type=sa.VARCHAR(length=128),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('employee', 'role',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               nullable=True)
    op.alter_column('task', 'status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.drop_column('task', 'created_at')
    op.drop_column('task', 'updated_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('task', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('task', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.alter_column('task', 'status',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
    op.alter_column('employee', 'role',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               nullable=False)
    op.alter_column('employee', 'password',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=128),
               existing_nullable=False)
    op.create_unique_constraint('department_name_key', 'department', ['name'])
    # ### end Alembic commands ###
